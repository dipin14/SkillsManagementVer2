@model PagedList.IPagedList<Skillset_PL.ViewModels.AdministratorSkillViewModel>
﻿@using Common.Extensions
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";
    ViewBag.Title = "Skills";
}
<link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
<link href="~/Content/theme.css" rel="stylesheet" />

<script src="~/Scripts/Employee.js"></script>

<div class="panel-group">
    <div class="panel panel-success" style="border-color:#2a3f54;">
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-10">
                    <label class="control-label col-sm-6" style="float:left;display:block;text-align:left">Employee Code : @(ViewData["employeecode"]) </label>
                    <label class="control-label col-sm-6" style="float:left;display:block;text-align:left;">  Employee Name : @(ViewData["employeename"]) </label>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.Count() > 0)
{
    <div class="panel panel-default">
        <table class="table table-hover table-responsive size-response">
            <thead style="background-color:#2a3f54;color:white">
                <tr>
                    <th>
                        @Html.DisplayName("Skill")
                    </th>
                    <th>
                        @Html.DisplayName("Rating")
                    </th>
                    <th>
                        @Html.DisplayName("Rated On")
                    </th>
                    <th>
                        @Html.DisplayName("Notes")
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td data-title="Skill">
                            @Html.DisplayFor(modelItem => item.SkillName)
                        </td>
                        <td data-title="Rating">
                            <div data-tooltip="@(item.RatingNote)" data-tooltip-position="bottom">
                                @for (var i = 1; i <= item.SkillValue; i++)
                                {
                                    <span class="starGlowTable"></span>
                                }
                                @for (var i = (item.SkillValue + 1); i <= 5; i++)
                                {
                                    <span class="starFadeTable"></span>
                                }
                            </div>

                        </td>
                        <td data-title="Rated On">
                            @Html.DisplayFor(modelItem => item.RatingDate)
                        </td>
                        <td data-title="Notes">
                            @Html.DisplayWithBreaksFor(modelItem => item.Note)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <br />
    <div class="alert alert-warning fade in" style="color:#2a3f54;background-color:whitesmoke;border-color:#2a3f54">
        <strong>No Skill Ratings!</strong>
        <br />There is no skill ratings available.
    </div>
}
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount


            @Html.PagedListPager(Model, page => Url.Action("SkillRate",
    new
    {
        code = ViewBag.Code,
        name = ViewBag.Name,
        page
    }))
            <br />
            <br />
            <span>
                <a href="javascript:history.back()" name="Back" value="Back" class="btn btn-aqua">Back</a>
            </span>
