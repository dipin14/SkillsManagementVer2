
@using Common.Extensions
@model PagedList.IPagedList<Skillset_PL.ViewModels.SkillViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Site.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@{
    ViewBag.Title = "Index";
}
@if (TempData["message"] != null)
{

    <script type="text/javascript">

        $(function () {

            AlertEmployee("@TempData["message"]");
        });
    </script>
}
<div id="snackbar"></div>
<p style="text-align: right">
    <a href="@Url.Action("Create", "Skill")" class="btn btn-new"><span class="fa fa-plus fa-lg"></span><span> <b>Skill</b></span></a>
</p>
<label class="control-label alert-success well-sm" style="display:block;text-align:center;background-color:#2a3f54;color:#FFF;">Skill Details</label>
@if (Model.Count() > 0)
{

    <div class="panel panel-default">
        <table class="table table-hover table-responsive size-response">
            <thead style="background-color:#2a3f54;color:white">
                <tr>
                    <th>
                        @Html.DisplayName("Skill Name")
                    </th>
                    <th>
                        @Html.DisplayName("Skill Description")
                    </th>
                    <th>
                        @Html.DisplayName("Operations")
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td data-title="Skill Name">
                            @Html.DisplayFor(modelItem => item.SkillName)
                        </td>
                        <td data-title="Skill Description">
                            @Html.DisplayWithBreaksFor(modelItem => item.SkillDescription)
                        </td>
                        <td data-title="Operations">
                            <a href="@Url.Action("Edit",new { skillName = item.SkillName })" data-tooltip="Edit Skill" data-tooltip-position="bottom"><i class="fa fa-pencil-square-o" style="background-color:white;color:#2a3f54;font-size:20px;"></i></a>
                            <a href="@Url.Action("Delete",new { skillName = item.SkillName })" data-tooltip="Delete Skill" data-tooltip-position="bottom"><i class="fa fa-trash-o" style="background-color:white;color:#2a3f54;font-size:20px;"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <br />
    <div class="alert alert-warning fade in" style="color:#2a3f54;background-color:whitesmoke;border-color:#2a3f54">
        <strong>No Skills!</strong>
        <br />There are no skills to display
    </div>
}
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",

    new
    {
        page
    }))
        <script src="~/Scripts/SkillRating.js"></script>
