﻿@using Common.Extensions
@model PagedList.IPagedList<Skillset_PL.ViewModels.SkillViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}
<div class="row first">
    <h3>Skill List</h3>

    <p style="text-align: right">
        @Html.ActionLink("New Skill", "Create", null, htmlAttributes: new { @class = "btn btn-success" })
    </p>
    <label class="control-label alert-success well-sm" style="display:block;text-align:center">Skill Details</label>
    @if (Model.Count() > 0)
    {
        <table class="table table-bordered table-hover table-responsive">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayName("Skill Name")
                    </th>
                    <th>
                        @Html.DisplayName("Skill Description")
                    </th>
                    <th>
                        @Html.DisplayName("Operations")
                    </th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SkillName)
                        </td>
                        <td>
                            @Html.DisplayWithBreaksFor(modelItem => item.SkillDescription)
                        </td>
                        <td>
                            <a href="@Url.Action("Edit",new { skillName = item.SkillName })"><i class="fa fa-pencil-square-o btn-sm btn-warning"></i></a>
                            <a href="@Url.Action("Delete",new { skillName = item.SkillName })"><i class="fa fa-trash-o btn-sm btn-danger"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <br />
        <div class="alert alert-warning fade in">
            <strong>No Skills!</strong>
            <br />There are no skills to display
        </div>
    }
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new
    {
        page
    }))
</div>
